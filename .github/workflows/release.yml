name: release

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - 'Dockerfile'
      - 'entrypoint.sh'
      - '.github/workflows/release.yml'
    #tags:
    #  - '*'

permissions:
  contents: write # needed to write releases
  id-token: write # needed for keyless signing
  packages: write # needed for ghcr access

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # - uses: sigstore/cosign-installer@main
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Prepare
        id: prep
        run: |
          build_id=8.1.$(git rev-list --count HEAD)-fpm-alpine
          echo "::set-output name=VERSION::${build_id}"
        #run: |
        #  VERSION=sha-${GITHUB_SHA::8}
        #  if [[ $GITHUB_REF == refs/tags/* ]]; then
        #    VERSION=${GITHUB_REF/refs\/tags\//}
        #  fi
        #  echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        #  echo ::set-output name=VERSION::${VERSION}
      - name: Generate images meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/deas/wordpress
          tags: |
            type=raw,value=${{ steps.prep.outputs.VERSION }}
            type=raw,value=latest
      - name: Publish linux/amd64 image # multi-arch image
        uses: docker/build-push-action@v3
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          # file: ./Dockerfile.xx
          # platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      #- name: Sign OCI artifacts
      #  env:
      #    COSIGN_EXPERIMENTAL: 1
      #  run: |
      #    cosign sign ghcr.io/deas/kind-wasmtime:${{ steps.prep.outputs.VERSION }}
